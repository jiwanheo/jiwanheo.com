name: Deploy CloudFormation Stack

on:
  push:
    branches:
      - main # Triggers on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Deploy CloudFormation Stack for S3
      - name: Deploy S3 Stack
        run: |
          aws cloudformation deploy \
            --template-file infra/s3bucket.yml \
            --stack-name jiwanheoCom-S3BucketStack \
            --capabilities CAPABILITY_NAMED_IAM \
            --region us-east-1 \
            --tags Key=Project ,Value=jiwanheo.com

      # Step 4: Set up ACM lambda function 
      - name: Package and Upload ACM Lambda Code
        run: |
          cd infra/lambda
          zip -r acm-lambda_function.zip acm-lambda.py
          aws s3 cp acm-lambda_function.zip s3://acm-lambda-jiwanheo.com/acm-lambda_function.zip

      # Step 5: Deploy SSL Certificate Stack
      - name: Deploy SSL Certificate Stack
        run: |
          aws cloudformation deploy \
            --template-file infra/sslcert.yml \
            --stack-name jiwanheoCom-SSLCertificateStack \
            --capabilities CAPABILITY_NAMED_IAM \
            --tags Key=Project ,Value=jiwanheo.com
            
      # Step 6: Deploy CloudFront Stack
      - name: Deploy CloudFront Stack
        run: |
          aws cloudformation deploy \
            --template-file infra/cloudfront.yml \
            --stack-name CloudFrontStack \
            --capabilities CAPABILITY_NAMED_IAM \
            --tags Key=Project ,Value=jiwanheo.com